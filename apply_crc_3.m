function apply_crc_3()

    % Î¦Ï?Ï?Ï„Ï‰ÏƒÎ· Ï„Ï‰Î½ Î´ÎµÎ´Î¿Î¼Î­Î½Ï‰Î½ Î±Ï€Ï? 2Î¿ ÎµÏ?Ï?Ï„Î·Î¼Î±
    load('new_message_series_2.mat', 'new_messages');
    
    % Î¥Î»Î¿Ï€Î¿Î¯Î·ÏƒÎ· Ï„Î¿Ï… CRC-24
    crc24_gen = comm.CRCGenerator('Polynomial',[1 1 0 0 0 0 1 1 0 0 1 0 0 1 1 0 0 1 1 1 1 1 0 1 1]); % Î?Ï?Î¹ÏƒÎ¼Ï?Ï‚ Ï„Î¿Ï… CRC-24 generator

    new_data = {};

     for i = 1:size(new_messages, 2)
         % NOTE --> Î¤Î± Î¼Î·Î½Ï…Î¼Î±Ï„Î± ÎµÎ¯Î½Î±Î¹ ÏƒÎµ Î±ÎºÎ­Ï?Î±Î¹Î± Î¼Î¿Ï?Ï†Î® ÏƒÏ„Î¿Î½ Ï€Î¯Î½Î±ÎºÎ±
         % new_messages, Î¿Ï€Î¿Ï?Ï„Îµ Î¸Î± Ï€Ï?Î­Ï€ÎµÎ¹ ÎºÎ±Î¹ Î½Î± Î¼ÎµÏ„Î±Ï„Ï?Î±Ï€Î¿Ï?Î½ ÏƒÎµ binary
         % Î¼Î¿Ï?Ï†Î®. Î Ï?Î¿ÏƒÏ€Î¬Î¸Î·ÏƒÎ± Î½Î± Ï„Î± Î²Î¬Î»Ï‰ Î±Ï…Ï„Î¿Ï?ÏƒÎ¹Î±, Î±Î»Î»Î¬ Î´ÎµÎ½ Î´Î¿Ï?Î»ÎµÏ…Îµ Î·
         % CRCGenerator ÏƒÏ‰ÏƒÏ„Î¬.
        % Î Î±Î¯Ï?Î½Î¿Ï…Î¼Îµ Ï„Î¿ i-th Î¼Ï?Î½Î·Î¼Î±
        message = new_messages(:, i);
        
        % Î?ÎµÏ„Î±Ï„Ï?Î¿Ï€Î® ÏƒÎµ ÎºÎ±Ï„Î¬Î»Î»Î·Î»Î· Î´Ï…Î±Î´Î¹ÎºÎ® Î¼Î¿Ï?Ï†Î®
        binary_message = double(dec2bin(message))';
        %   disp(message)
        %disp(dec2bin(message, 8))
        
        % CRC checksum, with the original message
        crc = crc24_gen(binary_message);
        
        %% ΠΡοΣοΧΗ!!!!!! 
        % --> ΤϿϿα θα πάϿω πίνακα με διαστάσεις 100000x32, οποίος έχει σε
        % binary μοϿφή τα αϿχικά μηνυματα μαζί με τα CRC τους. Δηλαδή δεν
        % θα είμαστε σε integer μοϿφή Ͽπως πϿιν αλλά θα έχουμε σε κάθε
        % γϿαμμή κανονικά τα μηνϿματα σε σωστή μοϿφή με το CRC τους. Για
        % κάποιο λϿγο μου τα έβαζε σε 32-bit, αλλά δεν μας πειϿάζει αυτή
        % την στιγμή παϿαμϿνο να είναι σωστά υπολογισμένα τα τελικά
        % μηνϿματα που ειναι καθϿς το εξέτασα και χειϿοκίνητα με το
        % εϿγαλείο https://asecuritysite.com/comms/crc_div
        % 
        new_data{i} = crc';
    end
    
    % Î‘Ï€Î¿Î¸Î®ÎºÎµÏ…ÏƒÎ· Ï„Ï‰Î½ Î½Î­Ï‰Î½ Î¼Î·Î½Ï…Î¼Î¬Ï„Ï‰Î½ ÏƒÎµ Î­Î½Î± Î½Î­Î¿ Î±Ï?Ï‡ÎµÎ¯Î¿ .mat
    save('new_data_3.mat', 'new_data');

end
